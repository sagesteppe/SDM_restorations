wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin:::readability()
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
harmonic.mean(c(1,25))
harmonic.mean(c(1,2,5))
install.packages('psych')
psych::harmonic.mean(c(1,2,5))
psych::mean(c(1,2,5))
mean(c(1,2,5))
psych::harmonic.mean(c(53, 54, 58, 60, 61))
psych::harmonic.mean(c(100))
sqrt(1oo)
sqrt(10)
sqrt(100)
sqrt(sum(98, 56, 72, 84))
sqrt(50)
3.162278
> sqrt(100)
sqrt(sum(75, 80, 25))
sqrt(sum(75, 80, 95))
log(sum(75, 80, 95))
log(100)
log(1000)
install.packages('equatiomatic')
fit <- lm(mpg ~ cyl + disp, mtcars)
# show the theoretical model
equatiomatic::extract_eq(fit)
fit <- lm(mpg ~ cyl + disp, mtcars)
equatiomatic::extract_eq(fit)
equatiomatic::extract_eq(fit)
install.packages('equatiomatic')
install.packages('fragstats')
library(fragstats)
install.packages("landscapemetrics")
landscapemetrics::get_patches(landscape)
library(landscapemetrics)
landscapemetrics::get_patches(landscape)
landscapemetrics::get_patches(landscape)
d <- landscapemetrics::get_patches(landscape)
View(d)
plot(d)
length(raster::unique(patched_raster[[1]]))
length(raster::unique(d[[1]]))
View(d)
d[["layer_1"]][["class_1"]]@data@values
plot(landscape)
show_patches(landscape)
rm(fit)
plot(landscape)
show_patches(landscape)
plot(landscape)
show_patches(landscape)
length(raster::unique(d[[1]]))
r <- rast(nrows=18, ncols=36, xmin=0)
library(terra)
r <- rast(nrows=18, ncols=36, xmin=0)
r[1:2, 5:8] <- 1
r[5:8, 2:6] <- 1
r[7:12, 22:36] <- 1
r[15:16, 18:29] <- 1
p <- patches(r)
plot(p)
View(p)
p
vals(r)
values(r)
r <- rast(nrows=18, ncols=36, xmin=0)
r[1:2, 5:8] <- 1
r[5:8, 2:6] <- 1
r[7:12, 22:36] <- 1
r[15:16, 18:29] <- 1
p <- patches(r)
plot(p)
plot(r)
plot(r)
View(p)
p
values(p)
values(r)
values(r)[values(p)]
values(r)[!is.na(values(p)) ]
!is.na(values(p))
r[1:2, 5:8] <- runif()
r[1:2, 5:8] <- runif(n = 6)
[1:2, 5:8]
r[1:2, 5:8] <- 1.1
r[5:8, 2:6] <- 1.2
r[7:12, 22:36] <- 1.3
r[15:16, 18:29] <- 1.4
p <- patches(r)
plot(p)
values(p)
values(r)[!is.na(values(p))]
values(p)
!is.na(values(p))
values(p)[!is.na(values(p))]
data.frame(
Patch = values(p)[!is.na(values(p))]
Suitability = values(r)[!is.na(values(p))]
data.frame(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
)
data.frame(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
) %>%
head()
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
)
library(tidyverse)
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
)
plot(p)
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
)
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
) %>%
head()
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
) %>%
sample()
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
) %>%
sample(n = 10)
tibble(
Patch = values(p)[!is.na(values(p))],
Suitability = values(r)[!is.na(values(p))]
) %>%
sample_n(10)
